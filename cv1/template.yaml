AWSTemplateFormatVersion: 2010-09-09

Description: Basic Network

Parameters:
  VpcCidr:
    Description: VpcCidr
    Type: String
    Default: 10.20.0.0/16

  Environment:
    Description: Environment
    Type: String
    Default: lab

  Project:
    Description: Environment
    Type: String
    Default: FRI

  PublicSubnetACidrBlock:
    Description: Cidr block number
    Type: String
    Default: 10
  PublicSubnetBCidrBlock:
    Description: Cidr block number
    Type: String
    Default: 20
  PublicSubnetCCidrBlock:
    Description: Cidr block number
    Type: String
    Default: 30

  PrivateSubnetACidrBlock:
    Description: Cidr block number
    Type: String
    Default: 11
  PrivateSubnetBCidrBlock:
    Description: Cidr block number
    Type: String
    Default: 21
  PrivateSubnetCCidrBlock:
    Description: Cidr block number
    Type: String
    Default: 31

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - { Key: Name, Value: !Join [ '-', [!Ref Environment, vpc] ] }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - { Key: Name, Value: Igw }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

###########################################################################################
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ !Ref PublicSubnetACidrBlock, !Cidr [ !Ref VpcCidr, 256, 8 ]]
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - { Key: Name, Value: PublicSubnetA }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ !Ref PublicSubnetBCidrBlock, !Cidr [ !Ref VpcCidr, 256, 8 ]]
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - { Key: Name, Value: PublicSubnetB }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }

  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ !Ref PublicSubnetCCidrBlock, !Cidr [ !Ref VpcCidr, 256, 8 ]]
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - { Key: Name, Value: PublicSubnetC }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - { Key: Name, Value: PublicRouteTable }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }

  PublicSubnetsRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetRouteTableAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetRouteTableAssociationC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetC
      RouteTableId: !Ref PublicRouteTable

###########################################################################################
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ !Ref PrivateSubnetACidrBlock, !Cidr [ !Ref VpcCidr, 256, 8 ]]
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - { Key: Name, Value: PrivateSubnetA }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ !Ref PrivateSubnetBCidrBlock, !Cidr [ !Ref VpcCidr, 256, 8 ]]
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - { Key: Name, Value: PrivateSubnetB }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }

  PrivateSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ !Ref PrivateSubnetCCidrBlock, !Cidr [ !Ref VpcCidr, 256, 8 ]]
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      Tags:
        - { Key: Name, Value: PrivateSubnetC }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }

  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - { Key: Name, Value: PrivateRouteTableA }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }
  PrivateRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - { Key: Name, Value: PrivateRouteTableB }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }
  PrivateRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - { Key: Name, Value: PrivateRouteTableC }
        - { Key: Environment, Value: !Ref Environment }
        - { Key: Project, Value: !Ref Project }

  PrivateSubnetRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTableA
  PrivateSubnetRouteTableAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetB
      RouteTableId: !Ref PrivateRouteTableB
  PrivateSubnetRouteTableAssociationC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetC
      RouteTableId: !Ref PrivateRouteTableC

  DefaultRouteA:
    DependsOn: NATGatewayA
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref PrivateRouteTableA
        DestinationCidrBlock: '0.0.0.0/0'
        NatGatewayId: !Ref NATGatewayA

  DefaultRouteB:
    DependsOn: NATGatewayB
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref PrivateRouteTableB
        DestinationCidrBlock: '0.0.0.0/0'
        NatGatewayId: !Ref NATGatewayB

  DefaultRouteC:
    DependsOn: NATGatewayC
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref PrivateRouteTableC
        DestinationCidrBlock: '0.0.0.0/0'
        NatGatewayId: !Ref NATGatewayC

###########################################################################

  NatGwEipA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: !Ref Vpc

  NatGwEipB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: !Ref Vpc

  NatGwEipC:
    Type: AWS::EC2::EIP
    Properties:
      Domain: !Ref Vpc

  NATGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId: !GetAtt NatGwEipA.AllocationId
        SubnetId: !Ref PublicSubnetA
        Tags:
          - { Key: Name, Value: NatGatewayA }
          - { Key: Environment, Value: !Ref Environment }
          - { Key: Project, Value: !Ref Project }

  NATGatewayB:
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId: !GetAtt NatGwEipB.AllocationId
        SubnetId: !Ref PublicSubnetB
        Tags:
          - { Key: Name, Value: NatGatewayB }
          - { Key: Environment, Value: !Ref Environment }
          - { Key: Project, Value: !Ref Project }

  NATGatewayC:
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId: !GetAtt NatGwEipC.AllocationId
        SubnetId: !Ref PublicSubnetC
        Tags:
          - { Key: Name, Value: NatGatewayC }
          - { Key: Environment, Value: !Ref Environment }
          - { Key: Project, Value: !Ref Project }
